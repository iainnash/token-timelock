/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Timelock } from "./Timelock";

export class TimelockFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _owner: string,
    _token: string,
    _tokenAmount: BigNumberish,
    daysGrant: BigNumberish,
    daysRecover: BigNumberish,
    overrides?: Overrides
  ): Promise<Timelock> {
    return super.deploy(
      _owner,
      _token,
      _tokenAmount,
      daysGrant,
      daysRecover,
      overrides || {}
    ) as Promise<Timelock>;
  }
  getDeployTransaction(
    _owner: string,
    _token: string,
    _tokenAmount: BigNumberish,
    daysGrant: BigNumberish,
    daysRecover: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _token,
      _tokenAmount,
      daysGrant,
      daysRecover,
      overrides || {}
    );
  }
  attach(address: string): Timelock {
    return super.attach(address) as Timelock;
  }
  connect(signer: Signer): TimelockFactory {
    return super.connect(signer) as TimelockFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Timelock {
    return new Contract(address, _abi, signerOrProvider) as Timelock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "daysGrant",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "daysRecover",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "claimee",
        type: "address",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "newRecipients",
        type: "address[]",
      },
    ],
    name: "addGrants",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "recipients",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timeReceiveGrant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timeRecoverGrant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000b8338038062000b8383398101604081905262000034916200012c565b600080546001600160a01b038087166001600160a01b03199283161790925560048054928816929091169190911790556001839055426200007d61ffff841662015180620001dd565b620000899190620001c2565b600355600060025561ffff811615620000cc5742620000a9828462000199565b620000bc9061ffff1662015180620001dd565b620000c89190620001c2565b6002555b60025460035410620001095760405162461bcd60e51b8152602060048201526002602482015261613560f01b604482015260640160405180910390fd5b50505050506200022e565b805161ffff811681146200012757600080fd5b919050565b600080600080600060a086880312156200014557600080fd5b8551620001528162000215565b6020870151909550620001658162000215565b604087015190945092506200017d6060870162000114565b91506200018d6080870162000114565b90509295509295909350565b600061ffff808316818516808303821115620001b957620001b9620001ff565b01949350505050565b60008219821115620001d857620001d8620001ff565b500190565b6000816000190483118215151615620001fa57620001fa620001ff565b500290565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146200022b57600080fd5b50565b610945806200023e6000396000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80634e71d92d14610072578063ce5165071461007c578063ce746024146100a4578063d1bc76a1146100ac578063dc5f31e0146100cc578063e3e3acdf146100e3578063fdb80774146100ec575b600080fd5b61007a6100ff565b005b61008f61008a366004610818565b61030e565b60405190151581526020015b60405180910390f35b61007a610342565b6100bf6100ba366004610818565b610549565b60405161009b919061084a565b6100d560025481565b60405190815260200161009b565b6100d560035481565b61007a6100fa366004610723565b610573565b600354421161013a5760405162461bcd60e51b8152602060048201526002602482015261613760f01b60448201526064015b60405180910390fd5b60005b6005548110156102f557336001600160a01b031660058281548110610164576101646108e3565b6000918252602090912001546001600160a01b031614156102e35760068181548110610192576101926108e3565b90600052602060002090602091828204019190069054906101000a900460ff16156101e45760405162461bcd60e51b8152602060048201526002602482015261309960f11b6044820152606401610131565b60005460015460405163a9059cbb60e01b81526001600160a01b039092169163a9059cbb916102189133919060040161085e565b602060405180830381600087803b15801561023257600080fd5b505af1158015610246573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026a91906107ef565b50600160068281548110610280576102806108e3565b90600052602060002090602091828204019190066101000a81548160ff0219169083151502179055507fb449c24d261a59627b537c8c41c57ab559f4205c56bea745ff61c5521bece214336040516102d8919061084a565b60405180910390a150565b806102ed816108b2565b91505061013d565b5060405162461bcd60e51b815260040161013190610877565b6006818154811061031e57600080fd5b9060005260206000209060209182820401919006915054906101000a900460ff1681565b6004546001600160a01b0316331461036c5760405162461bcd60e51b815260040161013190610877565b60025442116103a25760405162461bcd60e51b8152602060048201526002602482015261184d60f21b6044820152606401610131565b600080546040516370a0823160e01b81526001600160a01b03909116906370a08231906103d390309060040161084a565b60206040518083038186803b1580156103eb57600080fd5b505afa1580156103ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104239190610831565b90507f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28338260405161045692919061085e565b60405180910390a160005b6006548110156104bc57600160068281548110610480576104806108e3565b90600052602060002090602091828204019190066101000a81548160ff02191690831515021790555080806104b4906108b2565b915050610461565b506000546004805460405163a9059cbb60e01b81526001600160a01b039384169363a9059cbb936104f3939091169186910161085e565b602060405180830381600087803b15801561050d57600080fd5b505af1158015610521573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054591906107ef565b5050565b6005818154811061055957600080fd5b6000918252602090912001546001600160a01b0316905081565b6004546001600160a01b0316331461059d5760405162461bcd60e51b815260040161013190610877565b80516000546001546001600160a01b03909116906323b872dd90339030906105c6908690610893565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b15801561061557600080fd5b505af1158015610629573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064d91906107ef565b5060005b8181101561070257600583828151811061066d5761066d6108e3565b602090810291909101810151825460018082018555600094855283852090910180546001600160a01b0319166001600160a01b03909316929092179091556006805491820181559092527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f908204018054601f9092166101000a60ff02199091169055806106fa816108b2565b915050610651565b505050565b80356001600160a01b038116811461071e57600080fd5b919050565b6000602080838503121561073657600080fd5b823567ffffffffffffffff8082111561074e57600080fd5b818501915085601f83011261076257600080fd5b813581811115610774576107746108f9565b8060051b604051601f19603f83011681018181108582111715610799576107996108f9565b604052828152858101935084860182860187018a10156107b857600080fd5b600095505b838610156107e2576107ce81610707565b8552600195909501949386019386016107bd565b5098975050505050505050565b60006020828403121561080157600080fd5b8151801515811461081157600080fd5b9392505050565b60006020828403121561082a57600080fd5b5035919050565b60006020828403121561084357600080fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b602080825260029082015261613360f01b604082015260600190565b60008160001904831182151516156108ad576108ad6108cd565b500290565b60006000198214156108c6576108c66108cd565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220585ebbe4c976ec4ffa25368f0152047489cd188208697e691b98aa2c3d9c7b6264736f6c63430008060033";
