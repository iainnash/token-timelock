{
  "address": "0x20598068B4Fd5C2fc61DADFafF8c0A6cB37e0Bb5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "unlockTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "recoverTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "actor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "actor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "newRecipients",
          "type": "address[]"
        }
      ],
      "name": "GrantsAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Recovered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "newRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "grantSize",
          "type": "uint256"
        }
      ],
      "name": "addGrants",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeRecover",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeUnlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "grantedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recover",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeReceiveGrant",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeRecoverGrant",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x8b15da4f980738d47af1634b661a842792b57066669c2bc9182f62df8e201a22",
  "receipt": {
    "to": null,
    "from": "0x9444390c01Dd5b7249E53FAc31290F7dFF53450D",
    "contractAddress": "0x20598068B4Fd5C2fc61DADFafF8c0A6cB37e0Bb5",
    "transactionIndex": 12,
    "gasUsed": "983498",
    "logsBloom": "0x
    "blockHash": "0xfe59211a30e0fbe8a30b70185c75d4c22e0a3a2bf440684d9fec105c812dcf4a",
    "transactionHash": "0x8b15da4f980738d47af1634b661a842792b57066669c2bc9182f62df8e201a22",
    "logs": [],
    "blockNumber": 9154989,
    "cumulativeGasUsed": "2166427",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9444390c01Dd5b7249E53FAc31290F7dFF53450D",
    "0xc778417e063141139fce010982780140aa0cd5ab",
    1629565957,
    1629566317
  ],
  "solcInputHash": "d929a2959bc8104b981d89a95bab35f5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"unlockTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"recoverTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"newRecipients\",\"type\":\"address[]\"}],\"name\":\"GrantsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Recovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"newRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"grantSize\",\"type\":\"uint256\"}],\"name\":\"addGrants\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeRecover\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeUnlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"grantedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeReceiveGrant\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeRecoverGrant\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"iain github.com/iainnash/simple-timelock\",\"kind\":\"dev\",\"methods\":{\"addGrants(address[],uint256)\":{\"details\":\"Adds a grant to the timelock Grants can be added at any time before claim period.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Proxied token information for bookkeeping / discoverability Not implemented: 1. approvals 2. transfers etc.\"},\"claim()\":{\"notice\":\"Allows a user to claim their grant. Claimee has to be msg.sender.\"},\"constructor\":{\"notice\":\"Sets up grant created by TimelockCreator Contract\"},\"getTimeRecover()\":{\"notice\":\"Returns the admin can recover unclaimed grants\"},\"getTimeUnlock()\":{\"notice\":\"Returns the time users can recieve the grant / when the timelock expires\"},\"getToken()\":{\"notice\":\"Returns token for timelock and amount per recipient\"},\"grantedAmount(address)\":{\"notice\":\"Returns the status of the grant.\"},\"recover()\":{\"notice\":\"The owner of the grant can recover after the recovery timestamp passes. This sweeps remaining funds and destroys the contract data.\"},\"timeRecoverGrant()\":{\"notice\":\"Error codes lookup: 1: Recover and recieve grant days need to be greater than 0 2: Grant not valid. 3: Only owner can add grants. 4: Only owner can recover 5: Cannot set the recovery grant before the unlock time 6: Too early to recover 7: Too early to claim 8: Recover timestamp needs to be after receive timestamp 9: Already granted 10: Cannot grant after unlock 11: Token not approved or not enough 12: Invalid ownership\"}},\"notice\":\"Timelock contract. Fixed token payout and timing. Can add recipients and multiple grants per recipient.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Timelock.sol\":\"Timelock\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":40},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"contracts/Timelock.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\n/**\\n  Timelock contract.\\n  Fixed token payout and timing.\\n  Can add recipients and multiple grants per recipient.\\n\\n  @author iain\\n  github.com/iainnash/simple-timelock\\n */\\ncontract Timelock {\\n    // From IERC20\\n    event Transfer(address indexed from, address indexed to, uint256 tokens);\\n    /**\\n        Error codes lookup:\\n        1: Recover and recieve grant days need to be greater than 0\\n        2: Grant not valid.\\n        3: Only owner can add grants.\\n        4: Only owner can recover\\n        5: Cannot set the recovery grant before the unlock time\\n        6: Too early to recover\\n        7: Too early to claim\\n        8: Recover timestamp needs to be after receive timestamp\\n        9: Already granted\\n        10: Cannot grant after unlock\\n        11: Token not approved or not enough\\n        12: Invalid ownership\\n    */\\n\\n    // Timestamp for when the recovery begins\\n    uint256 public immutable timeRecoverGrant;\\n    // Timestamp for when the receive begins\\n    uint256 public immutable timeReceiveGrant;\\n    // Owner that can recover grant and add new grant addresses\\n    address private immutable owner;\\n    // Token to lock\\n    IERC20 private immutable token;\\n\\n    // Mapping of address to grant\\n    mapping(address => uint256) private grants;\\n\\n    // Emitted when a claim is recovered\\n    event Recovered(address recipient, uint256 amount);\\n\\n    // Emitted when a claim is claimed\\n    event Claimed(address actor, uint256 amount);\\n\\n    // Emitted when a grant is added\\n    event GrantsAdded(address actor, address[] newRecipients);\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"3\\\");\\n        _;\\n    }\\n\\n    /**\\n        Sets up grant created by TimelockCreator Contract\\n     */\\n    constructor(\\n        address _owner,\\n        IERC20 _token,\\n        uint256 unlockTimestamp,\\n        uint256 recoverTimestamp\\n    ) {\\n        token = _token;\\n        owner = _owner;\\n        require(\\n            unlockTimestamp > block.timestamp &&\\n                recoverTimestamp > block.timestamp,\\n            \\\"1\\\"\\n        );\\n        require(recoverTimestamp > unlockTimestamp, \\\"8\\\");\\n        timeReceiveGrant = unlockTimestamp;\\n        timeRecoverGrant = recoverTimestamp;\\n    }\\n\\n    /**\\n        Returns token for timelock and amount per recipient\\n     */\\n    function getToken() public view returns (IERC20) {\\n        return token;\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return owner;\\n    }\\n\\n    /** \\n        Returns the time users can recieve the grant / when the timelock expires\\n     */\\n    function getTimeUnlock() public view returns (uint256) {\\n        return timeReceiveGrant;\\n    }\\n\\n    /** \\n        Returns the admin can recover unclaimed grants\\n     */\\n    function getTimeRecover() public view returns (uint256) {\\n        return timeRecoverGrant;\\n    }\\n\\n    /**\\n        Proxied token information for bookkeeping / discoverability\\n        Not implemented:\\n            1. approvals\\n            2. transfers\\n            etc.\\n    */\\n    function balanceOf(address user) public view returns (uint256) {\\n        return grants[user];\\n    }\\n\\n    function totalSupply() public view returns (uint256) {\\n        return token.balanceOf(address(this));\\n    }\\n\\n    function decimals() public view returns (uint8) {\\n        return IERC20Metadata(address(token)).decimals();\\n    }\\n\\n    function name() public view returns (string memory) {\\n        return\\n            string(\\n                abi.encodePacked(\\n                    \\\"Timelocked \\\",\\n                    IERC20Metadata(address(token)).name()\\n                )\\n            );\\n    }\\n\\n    function symbol() public view returns (string memory) {\\n        return\\n            string(\\n                abi.encodePacked(\\n                    \\\"LOCK_\\\",\\n                    IERC20Metadata(address(token)).symbol()\\n                )\\n            );\\n    }\\n\\n    /** \\n        @dev Adds a grant to the timelock\\n        Grants can be added at any time before claim period.\\n    */\\n    function addGrants(address[] memory newRecipients, uint256 grantSize)\\n        external\\n        onlyOwner\\n    {\\n        require(grantSize > 0, \\\"2\\\");\\n        require(getTimeUnlock() > block.timestamp, \\\"10\\\");\\n        require(\\n            token.allowance(msg.sender, address(this)) >=\\n                newRecipients.length * grantSize,\\n            \\\"11\\\"\\n        );\\n\\n        uint256 numberRecipients = newRecipients.length;\\n        token.transferFrom(\\n            msg.sender,\\n            address(this),\\n            grantSize * numberRecipients\\n        );\\n        for (uint256 i = 0; i < numberRecipients; i++) {\\n            emit Transfer(address(0), newRecipients[i], grantSize);\\n            grants[newRecipients[i]] += grantSize;\\n        }\\n        emit GrantsAdded(owner, newRecipients);\\n    }\\n\\n    /** \\n        Returns the status of the grant.\\n     */\\n    function grantedAmount(address recipient) external view returns (uint256) {\\n        return grants[recipient];\\n    }\\n\\n    /**\\n        Allows a user to claim their grant. Claimee has to be msg.sender.\\n     */\\n    function claim() external {\\n        address recipient = msg.sender;\\n        require(block.timestamp >= timeReceiveGrant, \\\"7\\\");\\n        uint256 grantAmount = grants[recipient];\\n        require(grantAmount > 0, \\\"2\\\");\\n        token.transfer(recipient, grantAmount);\\n        grants[recipient] = 0;\\n        // Emit grant claimed event\\n        emit Claimed(recipient, grantAmount);\\n        // Burn tracker token\\n        emit Transfer(recipient, address(0x0), grantAmount);\\n    }\\n\\n    /**\\n        The owner of the grant can recover after the recovery timestamp passes.\\n        This sweeps remaining funds and destroys the contract data.\\n     */\\n    function recover() external onlyOwner {\\n        address payable sender = payable(msg.sender);\\n        require(block.timestamp >= timeRecoverGrant, \\\"6\\\");\\n        uint256 balance = token.balanceOf(address(this));\\n        emit Recovered(sender, balance);\\n        token.transfer(sender, balance);\\n        selfdestruct(sender);\\n    }\\n}\\n\",\"keccak256\":\"0x1e779b607c5bcf992c61458acaa2d7a0b1dd44720ff6151864f97791e39693b1\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x61010060405234801561001157600080fd5b50604051620012b1380380620012b1833981016040819052610032916100d3565b6001600160601b0319606084811b821660e05285901b1660c052428211801561005a57504281115b61008f5760405162461bcd60e51b81526020600482015260016024820152603160f81b60448201526064015b60405180910390fd5b8181116100c25760405162461bcd60e51b81526020600482015260016024820152600760fb1b6044820152606401610086565b60a091909152608052506101339050565b600080600080608085870312156100e957600080fd5b84516100f48161011b565b60208601519094506101058161011b565b6040860151606090960151949790965092505050565b6001600160a01b038116811461013057600080fd5b50565b60805160a05160c05160601c60e05160601c6110ce620001e3600039600081816101000152818161024301528181610314015281816103a201528181610505015281816105c6015281816108570152818161097f01528181610ad90152610bb001526000818161018f0152818161043c0152818161077a0152610a2d01526000818161021d015281816107b80152610c480152600081816101bd015281816101ee0152610a6d01526110ce6000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c806306fdde03146100ca57806318160ddd146100e857806321df0da7146100fe578063313ce5671461012d5780634deef753146101475780634e71d92d1461015c57806370a0823114610164578063893d20e81461018d57806395d89b41146101b3578063a6414443146101bb578063ce746024146101e1578063dc5f31e0146101e9578063def1e7ae14610210578063e3e3acdf14610218578063f3505fde14610164575b600080fd5b6100d261023f565b6040516100df9190610f3b565b60405180910390f35b6100f06102fa565b6040519081526020016100df565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516100df9190610eb2565b61013561039e565b60405160ff90911681526020016100df565b61015a610155366004610ca8565b610431565b005b61015a6107b5565b6100f0610172366004610c86565b6001600160a01b031660009081526020819052604090205490565b7f0000000000000000000000000000000000000000000000000000000000000000610120565b6100d261097b565b7f00000000000000000000000000000000000000000000000000000000000000006100f0565b61015a610a22565b6100f07f000000000000000000000000000000000000000000000000000000000000000081565b6100f0610c46565b6100f07f000000000000000000000000000000000000000000000000000000000000000081565b60607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561029a57600080fd5b505afa1580156102ae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102d69190810190610d83565b6040516020016102e69190610e52565b604051602081830303815290604052905090565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190610349903090600401610eb2565b60206040518083038186803b15801561036157600080fd5b505afa158015610375573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103999190610e16565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156103f957600080fd5b505afa15801561040d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103999190610e2f565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104825760405162461bcd60e51b815260040161047990610f6e565b60405180910390fd5b600081116104a25760405162461bcd60e51b815260040161047990610f89565b426104ab610c46565b116104dd5760405162461bcd60e51b8152602060048201526002602482015261031360f41b6044820152606401610479565b8082516104ea9190610fec565b604051636eb1769f60e11b81523360048201523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063dd62ed3e9060440160206040518083038186803b15801561054f57600080fd5b505afa158015610563573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105879190610e16565b10156105ba5760405162461bcd60e51b8152602060048201526002602482015261313160f01b6044820152606401610479565b81516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd33306105f78587610fec565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b15801561064657600080fd5b505af115801561065a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067e9190610d61565b5060005b818110156107565783818151811061069c5761069c61106c565b60200260200101516001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516106e991815260200190565b60405180910390a3826000808684815181106107075761070761106c565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600082825461073e9190610fd4565b9091555081905061074e8161103b565b915050610682565b507fa0cd582431bf0ccaa00246b434e59ebd5f63aa3d856a1d9328e7023b18cc63af7f0000000000000000000000000000000000000000000000000000000000000000846040516107a8929190610edf565b60405180910390a1505050565b337f000000000000000000000000000000000000000000000000000000000000000042101561080a5760405162461bcd60e51b81526020600482015260016024820152603760f81b6044820152606401610479565b6001600160a01b038116600090815260208190526040902054806108405760405162461bcd60e51b815260040161047990610f89565b60405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb9061088e9085908590600401610ec6565b602060405180830381600087803b1580156108a857600080fd5b505af11580156108bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e09190610d61565b506001600160a01b03821660009081526020819052604080822091909155517fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a9061092e9084908490610ec6565b60405180910390a16040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156109d657600080fd5b505afa1580156109ea573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a129190810190610d83565b6040516020016102e69190610e85565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a6a5760405162461bcd60e51b815260040161047990610f6e565b337f0000000000000000000000000000000000000000000000000000000000000000421015610abf5760405162461bcd60e51b81526020600482015260016024820152601b60f91b6044820152606401610479565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190610b0e903090600401610eb2565b60206040518083038186803b158015610b2657600080fd5b505afa158015610b3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5e9190610e16565b90507f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa288282604051610b91929190610ec6565b60405180910390a160405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90610be79085908590600401610ec6565b602060405180830381600087803b158015610c0157600080fd5b505af1158015610c15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c399190610d61565b50816001600160a01b0316ff5b7f000000000000000000000000000000000000000000000000000000000000000090565b80356001600160a01b0381168114610c8157600080fd5b919050565b600060208284031215610c9857600080fd5b610ca182610c6a565b9392505050565b60008060408385031215610cbb57600080fd5b82356001600160401b0380821115610cd257600080fd5b818501915085601f830112610ce657600080fd5b8135602082821115610cfa57610cfa611082565b8160051b9250610d0b818401610fa4565b8281528181019085830185870184018b1015610d2657600080fd5b600096505b84871015610d5057610d3c81610c6a565b835260019690960195918301918301610d2b565b509997909101359750505050505050565b600060208284031215610d7357600080fd5b81518015158114610ca157600080fd5b600060208284031215610d9557600080fd5b81516001600160401b0380821115610dac57600080fd5b818401915084601f830112610dc057600080fd5b815181811115610dd257610dd2611082565b610de5601f8201601f1916602001610fa4565b9150808252856020828501011115610dfc57600080fd5b610e0d81602084016020860161100b565b50949350505050565b600060208284031215610e2857600080fd5b5051919050565b600060208284031215610e4157600080fd5b815160ff81168114610ca157600080fd5b6a02a34b6b2b637b1b5b2b2160ad1b815260008251610e7881600b85016020870161100b565b91909101600b0192915050565b644c4f434b5f60d81b815260008251610ea581600585016020870161100b565b9190910160050192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b038381168252604060208084018290528451918401829052600092858201929091906060860190855b81811015610f2d578551851683529483019491830191600101610f0f565b509098975050505050505050565b6020815260008251806020840152610f5a81604085016020870161100b565b601f01601f19169190910160400192915050565b6020808252600190820152603360f81b604082015260600190565b6020808252600190820152601960f91b604082015260600190565b604051601f8201601f191681016001600160401b0381118282101715610fcc57610fcc611082565b604052919050565b60008219821115610fe757610fe7611056565b500190565b600081600019048311821515161561100657611006611056565b500290565b60005b8381101561102657818101518382015260200161100e565b83811115611035576000848401525b50505050565b600060001982141561104f5761104f611056565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122062cb5ee04498961c35300f6c35ec1bfa26d7c8f1ac4fc4987967a6f4d2d4106864736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100c55760003560e01c806306fdde03146100ca57806318160ddd146100e857806321df0da7146100fe578063313ce5671461012d5780634deef753146101475780634e71d92d1461015c57806370a0823114610164578063893d20e81461018d57806395d89b41146101b3578063a6414443146101bb578063ce746024146101e1578063dc5f31e0146101e9578063def1e7ae14610210578063e3e3acdf14610218578063f3505fde14610164575b600080fd5b6100d261023f565b6040516100df9190610f3b565b60405180910390f35b6100f06102fa565b6040519081526020016100df565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516100df9190610eb2565b61013561039e565b60405160ff90911681526020016100df565b61015a610155366004610ca8565b610431565b005b61015a6107b5565b6100f0610172366004610c86565b6001600160a01b031660009081526020819052604090205490565b7f0000000000000000000000000000000000000000000000000000000000000000610120565b6100d261097b565b7f00000000000000000000000000000000000000000000000000000000000000006100f0565b61015a610a22565b6100f07f000000000000000000000000000000000000000000000000000000000000000081565b6100f0610c46565b6100f07f000000000000000000000000000000000000000000000000000000000000000081565b60607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561029a57600080fd5b505afa1580156102ae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102d69190810190610d83565b6040516020016102e69190610e52565b604051602081830303815290604052905090565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190610349903090600401610eb2565b60206040518083038186803b15801561036157600080fd5b505afa158015610375573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103999190610e16565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156103f957600080fd5b505afa15801561040d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103999190610e2f565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104825760405162461bcd60e51b815260040161047990610f6e565b60405180910390fd5b600081116104a25760405162461bcd60e51b815260040161047990610f89565b426104ab610c46565b116104dd5760405162461bcd60e51b8152602060048201526002602482015261031360f41b6044820152606401610479565b8082516104ea9190610fec565b604051636eb1769f60e11b81523360048201523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063dd62ed3e9060440160206040518083038186803b15801561054f57600080fd5b505afa158015610563573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105879190610e16565b10156105ba5760405162461bcd60e51b8152602060048201526002602482015261313160f01b6044820152606401610479565b81516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd33306105f78587610fec565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b15801561064657600080fd5b505af115801561065a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067e9190610d61565b5060005b818110156107565783818151811061069c5761069c61106c565b60200260200101516001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516106e991815260200190565b60405180910390a3826000808684815181106107075761070761106c565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600082825461073e9190610fd4565b9091555081905061074e8161103b565b915050610682565b507fa0cd582431bf0ccaa00246b434e59ebd5f63aa3d856a1d9328e7023b18cc63af7f0000000000000000000000000000000000000000000000000000000000000000846040516107a8929190610edf565b60405180910390a1505050565b337f000000000000000000000000000000000000000000000000000000000000000042101561080a5760405162461bcd60e51b81526020600482015260016024820152603760f81b6044820152606401610479565b6001600160a01b038116600090815260208190526040902054806108405760405162461bcd60e51b815260040161047990610f89565b60405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb9061088e9085908590600401610ec6565b602060405180830381600087803b1580156108a857600080fd5b505af11580156108bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e09190610d61565b506001600160a01b03821660009081526020819052604080822091909155517fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a9061092e9084908490610ec6565b60405180910390a16040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156109d657600080fd5b505afa1580156109ea573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a129190810190610d83565b6040516020016102e69190610e85565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a6a5760405162461bcd60e51b815260040161047990610f6e565b337f0000000000000000000000000000000000000000000000000000000000000000421015610abf5760405162461bcd60e51b81526020600482015260016024820152601b60f91b6044820152606401610479565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190610b0e903090600401610eb2565b60206040518083038186803b158015610b2657600080fd5b505afa158015610b3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5e9190610e16565b90507f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa288282604051610b91929190610ec6565b60405180910390a160405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90610be79085908590600401610ec6565b602060405180830381600087803b158015610c0157600080fd5b505af1158015610c15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c399190610d61565b50816001600160a01b0316ff5b7f000000000000000000000000000000000000000000000000000000000000000090565b80356001600160a01b0381168114610c8157600080fd5b919050565b600060208284031215610c9857600080fd5b610ca182610c6a565b9392505050565b60008060408385031215610cbb57600080fd5b82356001600160401b0380821115610cd257600080fd5b818501915085601f830112610ce657600080fd5b8135602082821115610cfa57610cfa611082565b8160051b9250610d0b818401610fa4565b8281528181019085830185870184018b1015610d2657600080fd5b600096505b84871015610d5057610d3c81610c6a565b835260019690960195918301918301610d2b565b509997909101359750505050505050565b600060208284031215610d7357600080fd5b81518015158114610ca157600080fd5b600060208284031215610d9557600080fd5b81516001600160401b0380821115610dac57600080fd5b818401915084601f830112610dc057600080fd5b815181811115610dd257610dd2611082565b610de5601f8201601f1916602001610fa4565b9150808252856020828501011115610dfc57600080fd5b610e0d81602084016020860161100b565b50949350505050565b600060208284031215610e2857600080fd5b5051919050565b600060208284031215610e4157600080fd5b815160ff81168114610ca157600080fd5b6a02a34b6b2b637b1b5b2b2160ad1b815260008251610e7881600b85016020870161100b565b91909101600b0192915050565b644c4f434b5f60d81b815260008251610ea581600585016020870161100b565b9190910160050192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b038381168252604060208084018290528451918401829052600092858201929091906060860190855b81811015610f2d578551851683529483019491830191600101610f0f565b509098975050505050505050565b6020815260008251806020840152610f5a81604085016020870161100b565b601f01601f19169190910160400192915050565b6020808252600190820152603360f81b604082015260600190565b6020808252600190820152601960f91b604082015260600190565b604051601f8201601f191681016001600160401b0381118282101715610fcc57610fcc611082565b604052919050565b60008219821115610fe757610fe7611056565b500190565b600081600019048311821515161561100657611006611056565b500290565b60005b8381101561102657818101518382015260200161100e565b83811115611035576000848401525b50505050565b600060001982141561104f5761104f611056565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122062cb5ee04498961c35300f6c35ec1bfa26d7c8f1ac4fc4987967a6f4d2d4106864736f6c63430008060033",
  "devdoc": {
    "author": "iain github.com/iainnash/simple-timelock",
    "kind": "dev",
    "methods": {
      "addGrants(address[],uint256)": {
        "details": "Adds a grant to the timelock Grants can be added at any time before claim period."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "balanceOf(address)": {
        "notice": "Proxied token information for bookkeeping / discoverability Not implemented: 1. approvals 2. transfers etc."
      },
      "claim()": {
        "notice": "Allows a user to claim their grant. Claimee has to be msg.sender."
      },
      "constructor": {
        "notice": "Sets up grant created by TimelockCreator Contract"
      },
      "getTimeRecover()": {
        "notice": "Returns the admin can recover unclaimed grants"
      },
      "getTimeUnlock()": {
        "notice": "Returns the time users can recieve the grant / when the timelock expires"
      },
      "getToken()": {
        "notice": "Returns token for timelock and amount per recipient"
      },
      "grantedAmount(address)": {
        "notice": "Returns the status of the grant."
      },
      "recover()": {
        "notice": "The owner of the grant can recover after the recovery timestamp passes. This sweeps remaining funds and destroys the contract data."
      },
      "timeRecoverGrant()": {
        "notice": "Error codes lookup: 1: Recover and recieve grant days need to be greater than 0 2: Grant not valid. 3: Only owner can add grants. 4: Only owner can recover 5: Cannot set the recovery grant before the unlock time 6: Too early to recover 7: Too early to claim 8: Recover timestamp needs to be after receive timestamp 9: Already granted 10: Cannot grant after unlock 11: Token not approved or not enough 12: Invalid ownership"
      }
    },
    "notice": "Timelock contract. Fixed token payout and timing. Can add recipients and multiple grants per recipient.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 696,
        "contract": "contracts/Timelock.sol:Timelock",
        "label": "grants",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}